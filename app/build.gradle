apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: '../dependencies.gradle'

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        applicationId "com.hacksondev.tvmaze_codingchallenge"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk
        versionCode versions.versionCode
        versionName versions.versionName
        buildConfigField "String", "TV_MAZE_BASE_URL", "\"http://api.tvmaze.com/\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        dataBinding = true
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.activity:activity-ktx:$versions.activityVersion"

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"

    // android supports
    implementation "com.google.android.material:material:$versions.materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintVersion"

    // architecture components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycleVersion"
    implementation "androidx.room:room-runtime:$versions.roomVersion"
    implementation 'androidx.appcompat:appcompat:1.4.1'
    kapt "androidx.room:room-compiler:$versions.roomVersion"

    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$versions.roomVersion"

    // koin
    implementation "org.koin:koin-android:$versions.koinVersion"
    implementation "org.koin:koin-android-scope:$versions.koinVersion"
    implementation "org.koin:koin-android-viewmodel:$versions.koinVersion"

    // network
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttpVersion"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit-mock:$versions.retrofitVersion"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutinesVersion"

    // glide
    implementation "com.github.bumptech.glide:glide:$versions.glideVersion"
    kapt "com.github.bumptech.glide:compiler:$versions.glideVersion"

    // debugging
    implementation "com.jakewharton.timber:timber:$versions.timberVersion"

    // WorkManager
    implementation "androidx.work:work-runtime-ktx:$versions.workVersion"

    // LeakCanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$versions.leakcanaryVersion"

    //Junit
    testImplementation "junit:junit:$versions.junitVersion"

    // Testing Architecture components
    testImplementation "androidx.arch.core:core-testing:$versions.androidxTest"
    testImplementation "androidx.room:room-testing:$versions.roomVersion"

    // Dependencies for local unit tests
    testImplementation "org.mockito:mockito-core:$versions.mockitoVersion"
    // mock extension function
    testImplementation "io.mockk:mockk:$versions.mockkVersion"
    implementation 'com.squareup.picasso:picasso:2.5.2'
}